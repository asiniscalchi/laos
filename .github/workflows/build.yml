name: Build

# Controls when the action will run.
on:
  push:
  workflow_dispatch:

jobs:
  check:
    needs: build
    runs-on:
      group: laos
      labels: ubuntu-16-cores
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/cache
        with:
          cache-key: build
      - name: Check
        run: |
          cargo check --all-targets --release --features runtime-benchmarks --features try-runtime 

  build:
    runs-on:
      group: laos
      labels: ubuntu-16-cores
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/cache
        with:
          cache-key: build
      - name: Build
        run: |
          cargo build --release --locked
      - name: Archive binary
        uses: actions/upload-artifact@v4
        with:
          name: laos
          path: target/release/laos

  publish_image:
    needs: build
    runs-on:
      group: laos
      labels: ubuntu-16-cores
    steps:
      - uses: actions/checkout@v3
      - run: |
          mkdir -p target/release
      - name: Get binary
        uses: actions/download-artifact@v4
        with:
          name: laos
          path: target/release
      - run: |
          ls -R
          chmod +x ./target/release/laos
      - name: Log in to Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Push Laos Node Docker images
        uses: docker/build-push-action@v4
        with:
          cache-key: publish_image
          context: .
          file: ./docker/laos-node.local.Dockerfile
          push: true
          tags: freeverseio/laos-node:${{ github.sha }}

  lint:
    needs: build
    runs-on:
      group: laos
      labels: ubuntu-16-cores
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/cache
        with:
          cache-key: lint
      - name: install nightly
        run: |
          rustup toolchain install nightly
          rustup component add rustfmt --toolchain nightly-x86_64-unknown-linux-gnu
      - name: check format
        run: |
          cargo +nightly fmt --all --check
      - name: install clippy
        run: |
          rustup component add clippy
      - name: Check clippy
        run: |
          SKIP_WASM_BUILD=1 cargo clippy --all-targets --workspace --features runtime-benchmarks --features try-runtime -- -D warnings
  test:
    needs: build
    runs-on:
      group: laos
      labels: ubuntu-16-cores
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/cache
        with:
          cache-key: test

      - name: Test
        run: |
          SKIP_WASM_BUILD=1 cargo test

  try-runtime:
    needs: build
    runs-on:
      group: laos
      labels: ubuntu-16-cores
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/cache
        with:
          cache-key: try_runtime
      - name: Build
        run: |
          cargo build --release --locked --package laos --features=try-runtime
      - name: Try Runtime for Laos Omega
        run: |
          RUST_LOG=try-runtime ./target/release/laos try-runtime --runtime ./target/release/wbuild/laos-runtime/laos_runtime.wasm on-runtime-upgrade --checks=pre-and-post live --uri ws://174.138.104.13:9944

  e2e-tests:
    needs: build
    runs-on:
      group: laos
      labels: ubuntu-16-cores
    steps:
      - uses: actions/checkout@v3
      - run: |
          mkdir -p target/release
      - name: Get binary
        uses: actions/download-artifact@v4
        with:
          name: laos
          path: target/release
      - run: |
          ls -R
          chmod +x ./target/release/laos
      - name: Copy polkadot relay chain binary
        run: |
          wget https://github.com/paritytech/polkadot/releases/download/v0.9.42/polkadot
          chmod +x ./polkadot
      - name: Copy Astar parachain binary
        run: |
          wget https://github.com/AstarNetwork/Astar/releases/download/v5.23.0/astar-collator-v5.23.0-ubuntu-x86_64.tar.gz
          tar xf astar-collator-v5.23.0-ubuntu-x86_64.tar.gz
          chmod +x ./astar-collator

      - name: Copy zombienet binary
        run: |
          wget https://github.com/paritytech/zombienet/releases/download/v1.3.106/zombienet-linux-x64
          chmod +x ./zombienet-linux-x64

      - name: Run zombienet
        run: |
          export ZOMBIENET_RELAYCHAIN_COMMAND=./polkadot
          export ZOMBIENET_LAOS_COMMAND=./target/release/laos
          export ZOMBIENET_ASTAR_COMMAND=./astar-collator
          ./zombienet-linux-x64 spawn ./zombienet/native.toml -p native &
          echo "Zombienet started"

      - name: Wait for zombienet
        run: |
          timeout 36 sh -c 'until nc -z $0 $1; do echo -n .; sleep 1; done' localhost 9999

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          npm install
        working-directory: ./e2e-tests

      - name: Run tests
        run: |
          npm run build && npm run test
        working-directory: ./e2e-tests

      - name: Run QA tests
        if: github.event_name == 'workflow_dispatch'
        run: |
          npm run qa
        working-directory: ./e2e-tests

